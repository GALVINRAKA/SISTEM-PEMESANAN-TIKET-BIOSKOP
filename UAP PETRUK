NAMA KELOMPOK 1 B
Galvin Citraka Pandya Nugraha (2317051014)
Purwati Ayu Utami (2357051007)
Allisya Syakdari (2317051017)

SISTEM PEMESANAN TIKET BIOSKOP


//Dikerjakan Oleh Purwati Ayu Utami (2357051007)

#include <iostream>
#include <vector>
#include <string>
#include <queue>

using namespace std;

struct User {
    string username;
    string password;
};

struct Movie {
    string title;
    string schedule;
    int price;
};

class UserManager {
private:
    vector<User> users;

public:
    void registerUser() {
        User newUser;
        cout << "Masukkan nama pengguna: ";
        cin >> newUser.username;
        cout << "Masukkan kata sandi: ";
        cin >> newUser.password;
        users.push_back(newUser);
        cout << "Registrasi berhasil!\n";
    }

    bool loginUser(string username, string password) {
        for (const auto& user : users) {
            if (user.username == username && user.password == password) {
                return true;
            }
        }
        return false;
    }
};

class MovieManager {
public:
    vector<Movie> movies;

public:
    void displayMovies() {
        cout << "Jadwal Film:\n";
        for (const auto& movie : movies) {
            cout << movie.title << " - " << movie.schedule << " - Rp" << movie.price << endl;
        }
    }

    int calculateTotalPrice(int price, int numTickets) {
        return price * numTickets;
    }
};



// Dikerjakan Oleh Galvin Citraka P.N

class Theater {
private:
    char* seats;

public:
    Theater(int numSeats) {
        seats = new char[numSeats];
        for (int i = 0; i < numSeats; ++i) {
            seats[i] = ' '; 
        }
    }

    ~Theater() {
        delete[] seats;
    }

    void displaySeats() {
        cout << "Kursi Teater:\n";
        for (int i = 0; i < sizeof(seats); ++i) {
            cout << seats[i] << " ";
        }
        cout << endl;
    }

    void chooseSeat() {
        cout << "Pilih kursi Anda (contoh: A1): ";
        string seat;
        cin >> seat;
    }
};

class TicketQueue {
private:
    queue<string> ticketQueue;

public:
    void addToQueue(string ticketDetails) {
        ticketQueue.push(ticketDetails);
    }

    void processQueue() {
        while (!ticketQueue.empty()) {
            string ticket = ticketQueue.front();
            cout << "Mengolah tiket: " << ticket << endl;
            printTicket(ticket); 
            generateBarcode(); 
            ticketQueue.pop();
            
        }
    }

    void printTicket(string ticketDetails) {
        cout << "===== Bioskop TIM 1 =====\n";
        cout << "===== Detail Ticket =====\n";
        cout << ticketDetails << endl;
    }

    void generateBarcode() {
        srand(time(NULL));
        int barcode = rand() % 10000 + 1;
        cout << "Barcode: " << barcode << endl;
    }
};
